New Table( "Counter", 	Add Rows( 59 ), 	New Script( 		"Source", 		Open( 			"/Users/federicaventriglia/Documents/Universita/TESI/EspressoTests/EspressoTests/Results/Results.xlsx", 			Worksheets( "Counter" ), 			Use for all sheets( 1 ), 			Concatenate Worksheets( 0 ), 			Create Concatenation Column( 0 ), 			Worksheet Settings( 				1, 				Has Column Headers( 1 ), 				Number of Rows in Headers( 1 ), 				Headers Start on Row( 1 ), 				Data Starts on Row( 3 ), 				Data Starts on Column( 1 ), 				Data Ends on Row( 0 ), 				Data Ends on Column( 0 ), 				Replicated Spanned Rows( 1 ), 				Replicated Spanned Headers( 0 ), 				Suppress Hidden Rows( 1 ), 				Suppress Hidden Columns( 1 ), 				Suppress Empty Columns( 1 ), 				Treat as Hierarchy( 0 ), 				Multiple Series Stack( 0 ), 				Import Cell Colors( 0 ), 				Limit Column Detect( 0 ), 				Column Separator String( "-" ) 			) 		) 	), 	New Column( "Class", 		Character, 		"Nominal", 		Set Values( 			{"me.tsukanov.counter.ui.C1.AssertCountC1", 			"me.tsukanov.counter.ui.C1.BasicCountC1", 			"me.tsukanov.counter.ui.C1.ChangeThemeC1", 			"me.tsukanov.counter.ui.C1.CreateCounterC1", 			"me.tsukanov.counter.ui.C1.DeleteCounterC1", 			"me.tsukanov.counter.ui.C1.EditAssertC1", 			"me.tsukanov.counter.ui.C1.EditCounterC1", 			"me.tsukanov.counter.ui.C1.MainUIAssertC1", 			"me.tsukanov.counter.ui.C1.NewCounterAssertC1", 			"me.tsukanov.counter.ui.C2.AddRemoveCntC2", 			"me.tsukanov.counter.ui.C2.AssertCountC2", 			"me.tsukanov.counter.ui.C2.BasicCountC2", 			"me.tsukanov.counter.ui.C2.ChangeThemeC2", 			"me.tsukanov.counter.ui.C2.CreateCounterC2", 			"me.tsukanov.counter.ui.C2.DeleteCounterC2", 			"me.tsukanov.counter.ui.C2.EditAssertC2", 			"me.tsukanov.counter.ui.C2.EditCounterC2", 			"me.tsukanov.counter.ui.C2.MainUIAssertC2", 			"me.tsukanov.counter.ui.C2.NewCounterAssertC2", 			"me.tsukanov.counter.ui.C3.AddRemoveCntC3", 			"me.tsukanov.counter.ui.C3.AssertCountC3", 			"me.tsukanov.counter.ui.C3.ChangeThemeC3", 			"me.tsukanov.counter.ui.C3.CountResetC3", 			"me.tsukanov.counter.ui.C3.CounterBasicC3", 			"me.tsukanov.counter.ui.C3.DeleteCounterC3", 			"me.tsukanov.counter.ui.C3.EditAssertC3", 			"me.tsukanov.counter.ui.C3.MainUIAssertC3", 			"me.tsukanov.counter.ui.C3.NewCounterAssertC3", 			"me.tsukanov.counter.ui.C3.NewCounterC3", 			"me.tsukanov.counter.ui.C4.AddRemoveCntC4", 			"me.tsukanov.counter.ui.C4.AssertCountC4", 			"me.tsukanov.counter.ui.C4.BasicCountC4", 			"me.tsukanov.counter.ui.C4.ChangeThemeC4", 			"me.tsukanov.counter.ui.C4.CreateCounterC4", 			"me.tsukanov.counter.ui.C4.DeleteCounterC4", 			"me.tsukanov.counter.ui.C4.EditAssertC4", 			"me.tsukanov.counter.ui.C4.EditCounterC4", 			"me.tsukanov.counter.ui.C4.MainUIAssertC4", 			"me.tsukanov.counter.ui.C4.NewCounterAssertC4", 			"me.tsukanov.counter.ui.C5.AddRemoveCntC5", 			"me.tsukanov.counter.ui.C5.AssertCountC5", 			"me.tsukanov.counter.ui.C5.ChangeThemeC5", 			"me.tsukanov.counter.ui.C5.CountResetC5", 			"me.tsukanov.counter.ui.C5.CounterBasicC5", 			"me.tsukanov.counter.ui.C5.DeleteCounterC5", 			"me.tsukanov.counter.ui.C5.EditAssertC5", 			"me.tsukanov.counter.ui.C5.MainUIAssertC5", 			"me.tsukanov.counter.ui.C5.NewCounterAssertC5", 			"me.tsukanov.counter.ui.C5.NewCounterC5", 			"me.tsukanov.counter.ui.C6.AddRemoveCntC6", 			"me.tsukanov.counter.ui.C6.AssertCountC6", 			"me.tsukanov.counter.ui.C6.BasicCountC6", 			"me.tsukanov.counter.ui.C6.ChangeThemeC6", 			"me.tsukanov.counter.ui.C6.CreateCounterC6", 			"me.tsukanov.counter.ui.C6.DeleteCounterC6", 			"me.tsukanov.counter.ui.C6.EditAssertC6", 			"me.tsukanov.counter.ui.C6.EditCounterC6", 			"me.tsukanov.counter.ui.C6.MainUIAssertC6", 			"me.tsukanov.counter.ui.C6.NewCounterAssertC6"} 		), 		Set Display Width( 375 ) 	), 	New Column( "Failures", 		Numeric, 		"Nominal", 		Format( "Best", 15 ), 		Set Values( 			[0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 			1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 			0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1] 		), 		Set Display Width( 58 ) 	), 	New Column( "Duration", 		Character( 6 ), 		"Nominal", 		Set Values( 			{"2.322s", "2.163s", "3.575s", "2.694s", "2.501s", "3.365s", "3.697s", 			"0.799s", "3.356s", "5.467s", "2.374s", "2.444s", "1.581s", "2.623s", 			"2.549s", "2.671s", "2.915s", "0.641s", "3.455s", "4.518s", "2.558s", 			"1.439s", "2.002s", "2.663s", "1.233s", "2.796s", "1.098s", "3.363s", 			"2.679s", "5.301s", "2.278s", "2.354s", "4.739s", "2.693s", "2.202s", 			"2.522s", "3.535s", "0.746s", "3.712s", "4.344s", "2.325s", "1.207s", 			"1.723s", "2.417s", "1.501s", "2.646s", "1.104s", "3.513s", "2.876s", 			"0.821s", "2.121s", "2.092s", "1.486s", "0.659s", "3.422s", "2.739s", 			"2.452s", "0.757s", "0.784s"} 		), 		Set Display Width( 63 ) 	), 	New Column( "ContenDescription", 		Character( 3 ), 		"Nominal", 		Set Values( 			{"YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", 			"YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", 			"YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "NO", 			"NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", 			"NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", 			"NO", "NO", "NO", "NO", "NO"} 		), 		Set Display Width( 117 ) 	), 	New Column( "DepthLevel", 		Numeric, 		"Nominal", 		Format( "Best", 12 ), 		Set Selected, 		Set Values( 			[3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 			6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 6, 6, 			6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] 		), 		Set Display Width( 92 ) 	), 	Set Row States( 		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0] 	) ) << Run Formulas; Fit Group( 	Contingency( 		Y( :Failures ), 		X( :ContenDescription ), 		Contingency Table, 		Analysis of Means for Proportions( 1, Point Options( "Show Needles" ) ) 	), 	Contingency( 		Y( :Failures ), 		X( :DepthLevel ), 		Contingency Table, 		Analysis of Means for Proportions( 1, Point Options( "Show Needles" ) ) 	), 	<<{Arrange in Rows( 2 )} );