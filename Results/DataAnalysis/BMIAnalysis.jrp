New Table( "BMICalc", 	Add Rows( 41 ), 	New Script( 		"Source", 		Open( 			"/Users/federicaventriglia/Documents/Universita/TESI/EspressoTests/EspressoTests/Results/Results.xlsx", 			Worksheets( "BMICalc" ), 			Use for all sheets( 1 ), 			Concatenate Worksheets( 0 ), 			Create Concatenation Column( 0 ), 			Worksheet Settings( 				1, 				Has Column Headers( 1 ), 				Number of Rows in Headers( 1 ), 				Headers Start on Row( 1 ), 				Data Starts on Row( 3 ), 				Data Starts on Column( 1 ), 				Data Ends on Row( 0 ), 				Data Ends on Column( 0 ), 				Replicated Spanned Rows( 1 ), 				Replicated Spanned Headers( 0 ), 				Suppress Hidden Rows( 1 ), 				Suppress Hidden Columns( 1 ), 				Suppress Empty Columns( 1 ), 				Treat as Hierarchy( 0 ), 				Multiple Series Stack( 0 ), 				Import Cell Colors( 0 ), 				Limit Column Detect( 0 ), 				Column Separator String( "-" ) 			) 		) 	), 	New Column( "Class", 		Character, 		"Nominal", 		Set Values( 			{"com.zola.bmi.C1.InputDataTestC1", "com.zola.bmi.C1.MixedMetricsC1", 			"com.zola.bmi.C1.ScoreAssertionC1", 			"com.zola.bmi.C1.ScoreAssertionTextC1", "com.zola.bmi.C1.UIExistsTestC1", 			"com.zola.bmi.C1.UITextAssertC1", "com.zola.bmi.C2.ChangeMetricsInputC2", 			"com.zola.bmi.C2.InputDataC2", "com.zola.bmi.C2.MixedMetricsC2", 			"com.zola.bmi.C2.ScoreAssertTextC2", "com.zola.bmi.C2.UIAssertC2", 			"com.zola.bmi.C2.UIExistsC2", "com.zola.bmi.C2.UITextAssertC2", 			"com.zola.bmi.C3.ChangeMetricsInputC3", "com.zola.bmi.C3.InputDataC3", 			"com.zola.bmi.C3.MixedMetricsC3", "com.zola.bmi.C3.ScoreAssertC3", 			"com.zola.bmi.C3.UIAssertC3", "com.zola.bmi.C3.UIExistsC3", 			"com.zola.bmi.C3.UITextAssertC3", "com.zola.bmi.C4.ChangeMetricInputC4", 			"com.zola.bmi.C4.InputDataTestC4", "com.zola.bmi.C4.MixedMetricsC4", 			"com.zola.bmi.C4.ScoreAssertionC4", 			"com.zola.bmi.C4.ScoreAssertionTextC4", "com.zola.bmi.C4.UIExistsTestC4", 			"com.zola.bmi.C4.UITextAssertC4", "com.zola.bmi.C5.ChangeMetricsInputC5", 			"com.zola.bmi.C5.InputDataC5", "com.zola.bmi.C5.MixedMetricsC5", 			"com.zola.bmi.C5.ScoreAssertC5", "com.zola.bmi.C5.UIAssertC5", 			"com.zola.bmi.C5.UIExistC5", "com.zola.bmi.C5.UITextAssertC5", 			"com.zola.bmi.C6.ChangeMetricsInputC6", "com.zola.bmi.C6.InputDataC6", 			"com.zola.bmi.C6.MixedMetricsC6", "com.zola.bmi.C6.ScoreAssertTextC6", 			"com.zola.bmi.C6.UIAssertC6", "com.zola.bmi.C6.UIExistsC6", 			"com.zola.bmi.C6.UITextAssertC6"} 		), 		Set Display Width( 324 ) 	), 	New Column( "Failures", 		Numeric, 		"Nominal", 		Format( "Best", 15 ), 		Set Values( 			[0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 			1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0] 		) 	), 	New Column( "Duration", 		Character, 		"Nominal", 		Set Values( 			{"1.771s", "3.406s", "1.037s", "1.014s", "0.668s", "0.570s", "3.134s", 			"0.941s", "2.060s", "0.983s", "0.492s", "0.510s", "1.115s", "3.354s", 			"0.842s", "2.629s", "0.923s", "0.624s", "0.640s", "0.622s", "3.182s", 			"1.749s", "3.472s", "0.982s", "0.922s", "0.698s", "0.537s", "3.469s", 			"1.010s", "2.743s", "0.988s", "0.636s", "0.741s", "0.798s", "3.166s", 			"1.004s", "2.052s", "0.905s", "0.624s", "0.510s", "0.490s"} 		), 		Set Display Width( 62 ) 	), 	New Column( "ContentDescription", 		Character, 		"Nominal", 		Set Values( 			{"YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", 			"YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", "YES", 			"NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", 			"NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO", "NO"} 		) 	), 	New Column( "DeptLevel", 		Numeric, 		"Nominal", 		Format( "Best", 12 ), 		Set Selected, 		Set Values( 			[3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 			3, 3, 3, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 1, 1, 1, 1] 		), 		Set Display Width( 67 ) 	), 	Set Row States( 		[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] 	) ) << Run Formulas; Fit Group( 	Contingency( Y( :Failures ), X( :ContentDescription ), Contingency Table ), 	Contingency( 		Y( :Failures ), 		X( :DeptLevel ), 		Contingency Table, 		Analysis of Means for Proportions( 1, Point Options( "Show Needles" ) ) 	), 	<<{Arrange in Rows( 2 )} );